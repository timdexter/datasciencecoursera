install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(swirl)
install.packages("swirl")
install.packages("swirl")
library(swirl)
install.packages("swirl")
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
install.packages("dplyr")
library(XML)
url <- "https://api.github.com/users/jtleek/repos"
datagit <- htmlTreeParse(url, useInternalNodes = T)
library(jsonlite)
jsondata <-fromJSON("https://api.github.com/users/jtleek/repos")
names(jsondata)
jsondata$full_name
jsondata$created_at
jsondata$created_at[jsondata$name =="datasharing"]
jsondata
con <-url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLine(con)
htmlCode <- readLines(con)
close(con)
htmlCode
htmlCode[100]
nchar(htmlCode[100])
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
getdata_wksst8110 <- read.table("~/Downloads/getdata_wksst8110.for", quote="\"")
View(getdata_wksst8110)
read.fwf(file = "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths = c(15,4,9,4,9,4,9,4,4),header = F, skip = 4)
con <-url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
read.fwf(file = con,widths = c(15,4,9,4,9,4,9,4,4),header = F, skip = 4)
getwd()
setwd("~/R/cleandata")
read.fwf(file = "getdata_wksst8110.for",widths = c(15,4,9,4,9,4,9,4,4),header = F, skip = 4)
datar <- read.fwf(file = "getdata_wksst8110.for",widths = c(15,4,9,4,9,4,9,4,4),header = F, skip = 4)
datar
names(datar)
datar$V9
sum(datar$V9)
sum(datar$V4)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h(1)
f <-10
h(1)
h(1,1,1)
setwd("~/R/rprog")
source(file = "complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source('~/R/rprog/complete.R')
source('~/R/rprog/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/R/rprog/corr.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
complete("specdata", c(2, 4, 8, 10, 12))
summaryRprof(complete("specdata", c(2, 4, 8, 10, 12)))
Rprof(complete("specdata", c(2, 4, 8, 10, 12)))
setwd("~/R/ProgrammingAssignment2")
source('~/R/ProgrammingAssignment2/cachematrix.R')
x = rbind(c(1, -1/4), c(-1/4, 1))
x
m = makeCacheMatrix(x)
m
m$get()
cacheSolve(m)
cacheSolve(m)
m$set()
m$set(10)
m$get()
x = rbind(c(3, -1/5), c(-1/8, 2))
x
cacheSolve(m)
m = makeCacheMatrix(x)
m
m$get()
m
m$getinverse
m$inv
m$get
m$inv
m$inv()
source('~/R/ProgrammingAssignment2/cachematrix.R')
source('~/R/ProgrammingAssignment2/cachematrix.R')
x = rbind(c(30, -1/5), c(-1/8, 20))
x
m = makeCacheMatrix(x)
m
m$get()
m$getinv()
m$getinv(x)
m$getinv()
m$get()
source('~/R/ProgrammingAssignment2/cachematrix.R')
source('~/R/ProgrammingAssignment2/cachematrix.R')
m
x = rbind(c(30, -1/5), c(-1/8, 20))
x = rbind(c(300, -1/5), c(-1/8, 50))
m = makeCacheMatrix(x)
m
m$get()
cacheSolve(m)
source('~/R/ProgrammingAssignment2/cachematrix.R')
cacheSolve(m)
source('~/R/ProgrammingAssignment2/cachematrix.R')
source('~/R/ProgrammingAssignment2/cachematrix.R')
cacheSolve(m)
x = rbind(c(1/300, -1/5), c(-1/8, 1/324))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
cacheSolve(m)
x = rbind(c(-1/3, -1/5), c(-1/8, 1/3))
m = makeCacheMatrix(x)
cacheSolve(m)
cacheSolve(m)
source('~/R/ProgrammingAssignment2/cachematrix.R')
source('~/R/ProgrammingAssignment2/cachematrix.R')
setwd("~/R/datasciencecoursera/RProgramming/assignment3")
outcome <- read.csv("data/outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
View(outcome)
outcome[,11] = as.number(outcome[,11])
outcome[,11] = as.numeric(outcome[,11])
hist(outcome[,11])
outcome[,11]
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("CO",1)
names(best("GGG",1)
)
outcome$Hospital.Name[State =='CO']
outcome$Hospital.Name[outcome$State =='CO']
outcome$Hospital.Name[outcome$State =='CO' and Number.of.Patients...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack < 10]
outcome$Hospital.Name[outcome$State =='CO' and outcome$Number.of.Patients...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack < 10]
outcome$Hospital.Name[outcome$State =='CO' || outcome$Number.of.Patients...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack < 10]
outcome$Hospital.Name[outcome$State =='CO' AND outcome$Number.of.Patients...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack < 10]
outcome$Hospital.Name[outcome$State =='CO' & outcome$Number.of.Patients...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack < 10]
outcome$Hospital.Name[outcome$State =='CO' & which(x==min(outcome$Number.of.Patients...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)]
x <= which(min(outcome$Number.of.Patients...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),arr.ind = F)
x <- which(min(outcome$Number.of.Patients...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),arr.ind = F)
data <- read.csv("data/outcome-of-care-measures.csv", colClasses = "character")
min(data$Number.of.Patients...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
max(data$Number.of.Patients...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
HA <-data$Number.of.Patients...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
HA
HA <-as.numeric(data$Number.of.Patients...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
HA
which(HA ==min(HA),arr.ind = T)
which(HA ==min(HA),arr.ind = F)
which(HA ==min(HA),arr.ind = T)
which.min(HA)
which(HA == min(HA))
a <- c(1,2,0,3,7,0,0,0)
which(a == min(a))
class(HA)
unclass(HA)
which(HA == min(HA))
which.min(HA)
which(HA == min(HA))
a <- which(HA == min(HA))
a
which(HA == min(HA),arr.ind = TRUE)
which(HA == min(HA),arr.ind = FALSE)
which(HA == min(HA),arr.ind = FALSE,useNames = TRUE)
which(HA == min(HA),arr.ind = FALSE,useNames = FALSE)
which(HA == min(HA),arr.ind = TRUE,useNames = FALSE)
which(HA == min(HA),arr.ind = TRUE)
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
which(HA == min(HA),arr.ind = TRUE)
HA
head(HA)
str(HA)
order(HA,na.last = TRUE)
HA <-as.numeric(data$Number.of.Patients...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
HA <-supressWarnings(as.numeric(data$Number.of.Patients...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))
HA <-as.numeric(data$Number.of.Patients...Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
HAs = sort(HA,decreasing = F,na.last = T)
HAs
HAo = order(HA,na.last = TRUE,decreasing = FALSE)
HAo
HAs
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("dddd",1)
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
names(outcome)
View(data)
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("heart failure",1)
best("",heart failure")
best("dd",heart failure")
best("dd","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("dd","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("dd","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("dd","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("dd","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("CO","heart failure")
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
data
data[,15]
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
debugSource('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
class(data)
dd[ order(-dd[,4], dd[,1]), ]
data[order(data[11])]
data
data[11]
data[,11] = as.numeric(data[,11])
data[,11]
slice[order(slice[,index], na.last=TRUE),2]
data[order(data[,11],na.last = T)]
data[order(data[,11],na.last = T),2]
data[order(data[,11],na.last = T),3]
data[order(data[,11],na.last = T),4]
data[order(data[,11],na.last = T),5]
data[order(data[,11],na.last = T),2]
order(data[order(data[,11],na.last = T),2],decreasing = F)
order(data[order(data[,11],na.last = T),2],decreasing = F,2)
data[order(data[,11],na.last = T),2]
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
data[order(data[,11],na.last = T),2]
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
debugSource('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
debugSource('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co","heart failure")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
debugSource('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("MD", "heart attack")
View(data)
debugSource('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("MD", "heart attack")
debugSource('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("MD", "heart attack")
best("TX", "heart attack")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "pneumonia")
best("bb", "pneumonia")
best("MD", "pneumonssia")
best("co", "pneumonia")
debugSource('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co", "pneumonia")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co", "pneumonia")
rankhospital("TX", "heart failure", 4)
source('~/R/datasciencecoursera/RProgramming/assignment3/rankhospital.R')
source('~/R/datasciencecoursera/RProgramming/assignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("xX", "heart failure", 4)
source('~/R/datasciencecoursera/RProgramming/assignment3/rankhospital.R')
rankhospital("xX", "heart failure", 4)
rankhospital("TX", "heart failure", 4)
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co", "pneumonia")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co", "pneumonia")
source('~/R/datasciencecoursera/RProgramming/assignment3/best.R')
best("co", "pneumonia")
best("MD", "pneumonia")
debugSource('~/R/datasciencecoursera/RProgramming/assignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
View(statedata)
debugSource('~/R/datasciencecoursera/RProgramming/assignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
data[,2]
View(data)
order(data[,2])
order(data[,2],2)
order(data[,2],na.last = T)
order(data[1,2],na.last = T)
order(data[2,],na.last = T)
order(data[,2],na.last = T)
x = order(data[,11],data[,2])
x
source('~/R/datasciencecoursera/RProgramming/assignment3/rankhospital.R')
source('~/R/datasciencecoursera/RProgramming/assignment3/rankhospital.R')
source('~/R/datasciencecoursera/RProgramming/assignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('~/R/datasciencecoursera/RProgramming/assignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", "best")
rankhospital("TX", "heart failure", "worst")
rankhospital("TX", "heart failure", "10000")
rankhospital("MD", "heart attack", "worst")
debugSource('~/R/datasciencecoursera/RProgramming/assignment3/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
View(statedata)
source('~/R/datasciencecoursera/RProgramming/assignment3/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
debugSource('~/R/datasciencecoursera/RProgramming/assignment3/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
View(statedata)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
