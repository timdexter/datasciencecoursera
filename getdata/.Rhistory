install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(swirl)
install.packages("swirl")
install.packages("swirl")
library(swirl)
install.packages("swirl")
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
install.packages("dplyr")
library(XML)
url <- "https://api.github.com/users/jtleek/repos"
datagit <- htmlTreeParse(url, useInternalNodes = T)
library(jsonlite)
jsondata <-fromJSON("https://api.github.com/users/jtleek/repos")
names(jsondata)
jsondata$full_name
jsondata$created_at
jsondata$created_at[jsondata$name =="datasharing"]
jsondata
con <-url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLine(con)
htmlCode <- readLines(con)
close(con)
htmlCode
htmlCode[100]
nchar(htmlCode[100])
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
getdata_wksst8110 <- read.table("~/Downloads/getdata_wksst8110.for", quote="\"")
View(getdata_wksst8110)
read.fwf(file = "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths = c(15,4,9,4,9,4,9,4,4),header = F, skip = 4)
con <-url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
read.fwf(file = con,widths = c(15,4,9,4,9,4,9,4,4),header = F, skip = 4)
getwd()
setwd("~/R/cleandata")
read.fwf(file = "getdata_wksst8110.for",widths = c(15,4,9,4,9,4,9,4,4),header = F, skip = 4)
datar <- read.fwf(file = "getdata_wksst8110.for",widths = c(15,4,9,4,9,4,9,4,4),header = F, skip = 4)
datar
names(datar)
datar$V9
sum(datar$V9)
sum(datar$V4)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h(1)
f <-10
h(1)
h(1,1,1)
setwd("~/R/rprog")
source(file = "complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source('~/R/rprog/complete.R')
source('~/R/rprog/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/R/rprog/corr.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
complete("specdata", c(2, 4, 8, 10, 12))
summaryRprof(complete("specdata", c(2, 4, 8, 10, 12)))
Rprof(complete("specdata", c(2, 4, 8, 10, 12)))
setwd("~/R/ProgrammingAssignment2")
source('~/R/ProgrammingAssignment2/cachematrix.R')
x = rbind(c(1, -1/4), c(-1/4, 1))
x
m = makeCacheMatrix(x)
m
m$get()
cacheSolve(m)
cacheSolve(m)
m$set()
m$set(10)
m$get()
x = rbind(c(3, -1/5), c(-1/8, 2))
x
cacheSolve(m)
m = makeCacheMatrix(x)
m
m$get()
m
m$getinverse
m$inv
m$get
m$inv
m$inv()
source('~/R/ProgrammingAssignment2/cachematrix.R')
source('~/R/ProgrammingAssignment2/cachematrix.R')
x = rbind(c(30, -1/5), c(-1/8, 20))
x
m = makeCacheMatrix(x)
m
m$get()
m$getinv()
m$getinv(x)
m$getinv()
m$get()
source('~/R/ProgrammingAssignment2/cachematrix.R')
source('~/R/ProgrammingAssignment2/cachematrix.R')
m
x = rbind(c(30, -1/5), c(-1/8, 20))
x = rbind(c(300, -1/5), c(-1/8, 50))
m = makeCacheMatrix(x)
m
m$get()
cacheSolve(m)
source('~/R/ProgrammingAssignment2/cachematrix.R')
cacheSolve(m)
source('~/R/ProgrammingAssignment2/cachematrix.R')
source('~/R/ProgrammingAssignment2/cachematrix.R')
cacheSolve(m)
x = rbind(c(1/300, -1/5), c(-1/8, 1/324))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
cacheSolve(m)
x = rbind(c(-1/3, -1/5), c(-1/8, 1/3))
m = makeCacheMatrix(x)
cacheSolve(m)
cacheSolve(m)
source('~/R/ProgrammingAssignment2/cachematrix.R')
source('~/R/ProgrammingAssignment2/cachematrix.R')
setwd("~/R/datasciencecoursera/getdata")
traindata <- read.csv("data/UCI HAR Dataset/test/X_train.txt",sep = ",",header = F)
getwd()
traindata <- read.csv("data/UCI HAR Dataset/test/X_train.txt",sep = "",header = F)
getwd()
traindata <- read.csv("data/UCI\ HAR\ Dataset/test/X_train.txt",sep = "",header = F)
traindata <- read.csv("data/UCI\ HAR\ Dataset/test/X_test.txt",sep = "",header = F)
head(traindata)
features <- read.table("data/UCI HAR Dataset/features.txt")[,2]
features
features <- read.table("data/UCI HAR Dataset/features.txt")
features
View(features)
View(traindata)
activity_labels <- read.table("data/UCI HAR Dataset/activity_labels.txt")[,2]
activity_labels
activity_labels <- read.table("data/UCI HAR Dataset/activity_labels.txt")
activity_labels
testdata <- read.csv("data/UCI HAR Dataset/test/X_test.txt",sep = "",header = F)
traindata <- read.csv("data/UCI HAR Dataset/train/X_train.txt",sep = "",header = F)
allData = rbind(training, testing)
allData = rbind(traindata,testdata)
View(allData)
activities <- read.table("data/UCI HAR Dataset/activity_labels.txt")
View(features)
source('~/R/datasciencecoursera/getdata/run_analysis.R')
